plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'

//	id "org.sonarqube" version "4.2.1.3168"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // 타임리프에서 layout.html 사용하려고

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//database
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.security:spring-security-messaging'

	//google
	implementation 'com.google.cloud:google-cloud-language:2.21.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.18.0'

	//jasypt 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	//S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.499'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.apache.tika:tika-core:2.8.0'


	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//메일
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled false
	}
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true // 활성화
			element = 'CLASS' // 클래스 단위로 커버리지 체크

			limit {
				counter = "LINE"
				value = 'COVEREDRATIO'
//				minimum = 0.60
			}
			excludes = [
			        "**.standard.util.*",
					"**.MnM.base.*",
					"**.main.generated.*",
					"**.entity.*",
					"**.dto.*",
					"**.event.*",
					"**.repository.*",
					"**.controller.LikeablePersonController.LikeForm"
			]
		}

	}
}

//sonarqube {
//	properties {
//
//		property "sonar.projectKey" ,"mnm"
//		property "sonar.projectName",'mnm'
//		property "sonar.host.url", "http://localhost:9000"
//		property "sonar.token","sqp_04241f5a03aa0b2dbf612ac7a8273c06aeaa061f"
//		property "sonar.language", "java"
//		property "sonar.sourceEncoding", "UTF-8"
//		property "sonar.sources", "src/main/java"
//		property "sonar.tests", "src/test/java"
//		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml" // jacoco xml 파일 위치
//		property "sonar.java.binaries", "${buildDir}/classes"
//		property "sonar.test.inclusions", "**/*Test.java"
//		property "sonar.exclusions", "**/util/**, **/support/**, **/dto/**" // 제외할 클래스들
//	}
//}
